{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\nimport Rails from \"@rails/ujs\";\nimport Turbolinks from \"turbolinks\";\nimport * as ActiveStorage from \"@rails/activestorage\";\nimport \"channels\";\nRails.start();\nTurbolinks.start();\nActiveStorage.start();\n\nvar Timer = /*#__PURE__*/function (_React$Component) {\n  _inherits(Timer, _React$Component);\n\n  var _super = _createSuper(Timer);\n\n  function Timer(props) {\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      seconds: 0\n    };\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"tick\",\n    value: function tick() {\n      this.setState(function (state) {\n        return {\n          seconds: state.seconds + 1\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        return _this2.tick();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return <div>\n          Secondes : {this.state.seconds}\n        </div>;\n    }\n  }]);\n\n  return Timer;\n}(React.Component);\n\nReactDOM.render(<Timer />, document.getElementById('timer-example'));\nend;","map":{"version":3,"sources":["/home/dev-admin/Documents/Study/testgit/app/javascript/packs/application.js"],"names":["Rails","Turbolinks","ActiveStorage","start","Timer","props","state","seconds","setState","interval","setInterval","tick","clearInterval","React","Component","ReactDOM","render","document","getElementById","end"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;AACA,OAAO,UAAP;AAEAF,KAAK,CAACG,KAAN;AACAF,UAAU,CAACE,KAAX;AACAD,aAAa,CAACC,KAAd;;IACMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AAFiB;AAGlB;;;;WAED,gBAAO;AACL,WAAKC,QAAL,CAAc,UAAAF,KAAK;AAAA,eAAK;AACtBC,UAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;AADH,SAAL;AAAA,OAAnB;AAGD;;;WAED,6BAAoB;AAAA;;AAClB,WAAKE,QAAL,GAAgBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACC,IAAL,EAAN;AAAA,OAAD,EAAoB,IAApB,CAA3B;AACD;;;WAED,gCAAuB;AACrBC,MAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;;;WAED,kBAAS;AACP,aACE,CAAC,GAAD;AACR,qBAAqB,CAAC,KAAKH,KAAL,CAAWC,OAAZ;AACrB,QAAQ,EAAE,GAAF,CAHF;AAKD;;;;EA1BeM,KAAK,CAACC,S;;AA6BxBC,QAAQ,CAACC,MAAT,CACE,CAAC,KAAD,GADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAFF;AAIFC,GAAG","sourcesContent":["// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n\nimport Rails from \"@rails/ujs\"\nimport Turbolinks from \"turbolinks\"\nimport * as ActiveStorage from \"@rails/activestorage\"\nimport \"channels\"\n\nRails.start()\nTurbolinks.start()\nActiveStorage.start()\nclass Timer extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { seconds: 0 };\n    }\n  \n    tick() {\n      this.setState(state => ({\n        seconds: state.seconds + 1\n      }));\n    }\n  \n    componentDidMount() {\n      this.interval = setInterval(() => this.tick(), 1000);\n    }\n  \n    componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  \n    render() {\n      return (\n        <div>\n          Secondes : {this.state.seconds}\n        </div>\n      );\n    }\n  }\n  \n  ReactDOM.render(\n    <Timer />,\n    document.getElementById('timer-example')\n  );\nend"]},"metadata":{},"sourceType":"module"}